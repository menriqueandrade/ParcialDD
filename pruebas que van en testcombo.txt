 //salida negativa combo
        [Test]
        public void SalidaNegativaCombo()
        {
            InvalidOperationException ex = Assert.Throws<InvalidOperationException>(() => combo.RegistrarSalida(-20, salidasProducto));
            Assert.AreEqual(ex.Message, "La cantidad debe ser mayor a 0");
        }

        //salida incorrecta para el combo
        [Test]
        public void salidaIncorrectaCombo()
        {
            InvalidOperationException ex = Assert.Throws<InvalidOperationException>(() => combo.RegistrarSalida(11, salidasProducto));
            Assert.AreEqual(ex.Message, "El producto GT-01 esta sin cantidad disponible");
        }

        //salida correcta para el combo
        [Test]
        public void salidaCorrectaCombo()
        { 
            combo.RegistrarSalida(2, salidasProducto);
            Assert.AreEqual(combo.Precio, 33000);
        }

        //salida correcta posterior para el combo
        [Test]
        public void salidaposteriorCorrectaCombo()
        {
            combo.RegistrarSalida(2, salidasProducto);
            combo.RegistrarSalida(2, salidasProducto);
            Assert.AreEqual(combo.Precio, 66000);
        }